load (7,1);
load (8,2);
load (23,17);
load (24,18);
[READY_LIST + 0] = 0;
load (25,21);
load (26,22);
load (27,23);
PTBR = 1024;
PTLR = 4;
[PTBR + 0] = 25;
[PTBR + 1] = "01";
[PTBR + 2] = 26;
[PTBR + 3] = "01";
[PTBR + 4] = 27;
[PTBR + 5] = "01";
[PTBR + 6] = 28;
[PTBR + 7] = "01";
[READY_LIST + 1] = 2;
SP = 3 * 512;
[28 * 512] = 0;
[READY_LIST + 32] = 1;
load (29,25);
alias PTBR_Process1 S0;
PTBR_Process1 = 1024 + 8 * 1;
[PTBR_Process1 + 0] = 29;
[PTBR_Process1 + 1] = "01";
[PTBR_Process1 + 2] = -1;
[PTBR_Process1 + 3] = "00";
[PTBR_Process1 + 4] = -1;
[PTBR_Process1 + 5] = "00";
[PTBR_Process1 + 6] = 30;
[PTBR_Process1 + 7] = "01";
[READY_LIST + 33] = 1;
[READY_LIST + 37] = PTBR_Process1;
[READY_LIST + 38] = 4;
[READY_LIST + 34] = 3 * 512;
[READY_LIST + 35] = 3 * 512;
[READY_LIST + 36] = 0;
load (9,3);
load (10,4);
alias currentPID S0;
currentPID = (PTBR - 1024)/8;
alias currentPCB S1;
currentPCB = READY_LIST + 32 * currentPID;
[currentPCB + 1] = 1;
[currentPCB + 2] = BP;
[currentPCB + 3] = SP - 1;
alias physicalSP S2;
physicalSP = ([PTBR + 2 * (SP / 512)] * 512) + (SP % 512);
[currentPCB + 4] = [physicalSP];
[currentPCB + 5] = PTBR;
[currentPCB + 6] = PTLR;
[currentPCB + 7 ] = R0;
[currentPCB + 8 ] = R1;
[currentPCB + 9 ] = R2;
[currentPCB + 10 ] = R3;
[currentPCB + 11 ] = R4;
[currentPCB + 12 ] = R5;
[currentPCB + 13 ] = R6;
[currentPCB + 14 ] = R7;
ireturn;

